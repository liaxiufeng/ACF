/*!
 * jquery.dad.js v1 (http://konsolestudio.com/dad)
 * Author William Lima
 */
(function ($) {
    "use strict";
    let isPaste = false;
    let nowDate;
    let daddyScrollLeft;
    let daddyOut;
    function O_dad() {
        var self = this;
        this.x = 0;
        this.y = 0;
        this.target = false;
        this.clone = false;
        this.paste = false;
        this.placeholder = false;
        this.pastePlaceholder = false;
        this.cloneoffset = { x: 0, y: 0 };
        this.move = function (e) {
            self.x = e.pageX;
            self.y = e.pageY;
            let parentScrollTop = $(".current-show-list").eq(0).scrollTop();
            if (self.clone != false && self.target != false) { self.clone.css({ top: self.y - self.cloneoffset.y + parentScrollTop, left: self.x - self.cloneoffset.x + $(".current-show-list").eq(0).scrollLeft() }) } else { }
        };
        $(window).on('mousemove', function (e) { self.move(e) })
    }
    $.prototype.dad = function (opts) {
        var me, defaults, options;
        me = this;
        defaults = { target: '>div', draggable: false, copyPlaceholder: "复制到此处", placeholder: '移动到此处', callback: false, containerClass: 'dad-container', childrenClass: 'dads-children', cloneClass: 'dads-children-clone', active: true };
        options = $.extend({}, defaults, opts);
        $(this).each(function (index,item) {
            var mouse, target, dragClass, active, callback, placeholder, copyPlaceholder, daddy, childrenClass, jQclass, cloneClass;
            mouse = new O_dad();
            active = options.active;
            daddy = $(item);
            daddyOut = daddy;
            if (!daddy.hasClass('dad-active') && active == true) daddy.addClass('dad-active');
            childrenClass = options.childrenClass;
            cloneClass = options.cloneClass;
            jQclass = '.' + childrenClass;
            daddy.addClass(options.containerClass);
            target = daddy.find(options.target);
            placeholder = options.placeholder;
            copyPlaceholder = options.pastePlaceholder;
            callback = options.callback;
            dragClass = 'dad-draggable-area';
            function mouseupfnc(e) {
                let isAdd = false;
                if ($(e.target).hasClass("addItemDrag") && mouse.target != false) {
                    // alert(1);
                    isAdd = true;
                    // mouse.target.next("li.segmentation-li").remove();
                    // $(e.target).prev().append(mouse.target);
                    // mouse.target.after("<li class='segmentation-li'></li>");
                }
                dad_end(e, isAdd);
            };
            // $(document).on('mouseup', function(e) { dad_end(e) });
            $(document).off('mouseup', mouseupfnc);
            $(document).on('mouseup', mouseupfnc);
            var order = 1;
            target.addClass(childrenClass).each(function () {
                if ($(this).data('dad-id') == undefined) { $(this).attr('data-dad-id', order) }
                $(this).attr('data-dad-position', order);
                order++
            });

            function update_position(e) {
                var order = 1;
                e.find(jQclass).each(function () {
                    $(this).attr('data-dad-position', order);
                    order++
                })
            }

            function dad_end(e, isAdd = false) {
                let targetDom;
                if ($(e.target).hasClass("addItemDrag")) {
                    console.log($(e.target));
                }
                // console.log("end", isPaste);
                if (mouse.target != false && mouse.clone != false) {
                    // targetDom = mouse.target;
                    let layerIndex = layer.load(1, {
                        shade: [0.1, '#fff'], //0.1透明度的白色背景
                        time: 25000
                    });
                    try {
                        if (callback != false) { callback(mouse.target) }
                        var appear = mouse.target;
                        var desapear = mouse.clone;
                        var holder = mouse.placeholder;
                        var copyDom = mouse.paste;
                        var bLeft = 0;
                        let parentScrollTop = $(".current-show-list").eq(0).scrollTop();
                        let a;
                        // daddy = a;
                        Math.floor(parseFloat(daddy.css('border-left-width')));
                        var bTop = 0;
                        Math.floor(parseFloat(daddy.css('border-top-width')));
                        if (isAdd && isPaste) {
                            $(e.target).prev().append(mouse.paste);
                        }
                        if (!isPaste) {
                            if (isAdd) {
                                mouse.target.next("li.segmentation-li").remove();
                                $(e.target).prev().append(mouse.target);
                                mouse.target.after("<li class='segmentation-li'></li>");
                            }
                            if(typeof daddy[0] == 'undefined'){
                                // debugger;
                                // console.log(daddy);
                                daddy = $(".current-show-list").eq(0);
                            }
                            if ($.contains(daddy[0], mouse.target[0])) {
                                // daddy = $('.test').eq(0)
                                // console.log('不在包含内',daddy[0],mouse.target[0])
                                mouse.clone.animate({ top: mouse.target.offset().top - daddy.offset().top - bTop + parentScrollTop, left: mouse.target.offset().left - daddy.offset().left - bLeft + daddy.scrollLeft() }, 300, function (e) {
                                    appear.css({ visibility: 'visible' }).removeClass('active');
                                    desapear.remove()
                                })
                            } else { mouse.clone.fadeOut(300, function () {appear.css({ visibility: 'visible' }).removeClass('active'); desapear.remove() }) }
                        } else {
                            nowDate = new Date().getTime();

                            if ($.contains(daddy[0], mouse.paste[0])) {

                                console.log(mouse.pastePlaceholder);
                                mouse.clone.animate({ top: mouse.paste.offset().top - daddy.offset().top - bTop + parentScrollTop, left: mouse.paste.offset().left - daddy.offset().left - bLeft + daddy.scrollLeft() }, 300, function (e) {
                                    copyDom.removeClass('readyCopy');
                                    desapear.remove()
                                })
                            } else { mouse.clone.fadeOut(300, function () {appear.css({ visibility: 'visible' }).removeClass('active'); desapear.remove() }) };
                            mouse.pastePlaceholder.remove();
                            mouse.pastePlaceholder = false;
                            parameterUtils.copyMateNodeInfo(mouse.paste.attr("id"), daddy.attr("id"), nowDate, setCopyInfo)
                            mouse.paste.attr("id", nowDate);
                            myEmitter.emit("addNodeSuccess",nowDate,$(mouse.paste).parents("ul").eq(0).hasClass("liucheng-list")?$(mouse.paste).parents("ul").eq(0).attr("id"):$(mouse.paste).parents("ul").eq(0).parents("li.separate-icon").eq(0).attr("id"),$(mouse.paste).parents("ul.liucheng-list").eq(0).attr("id"))
                            mouse.paste.find("li.separate-icon").each(function (index, item) {
                                let tempDate = nowDate + index + 1;
                                console.log(tempDate, $(this).attr("id"));
                                parameterUtils.copyMateNodeInfo($(this).attr("id"), daddy.attr("id"), tempDate, setCopyInfo);
                                $(this).attr("id", tempDate);
                                myEmitter.emit("addNodeSuccess",tempDate,$(item).parents("ul").eq(0).hasClass("liucheng-list")?$(item).parents("ul").eq(0).attr("id"):$(item).parents("ul").eq(0).parents("li.separate-icon").eq(0).attr("id"),$(item).parents("ul.liucheng-list").eq(0).attr("id"))
                            });
                            addDrapDad($("#" + nowDate + " .menu-icon"));
                        }
                        holder.remove();
                        targetDom = $(mouse.target).attr("id");
                        mouse.clone = false;
                        mouse.placeholder = false;
                        mouse.target = false;
                        update_position(daddy);
                        layer.close(layerIndex);
                        if(isPaste){

                            
                        }else {

                            myEmitter.emit("domDragSuccess",targetDom,$('#'+targetDom).parents("ul").eq(0).hasClass("liucheng-list")?$('#'+targetDom).parents("ul").eq(0).attr("id"):$('#'+targetDom).parents("ul").eq(0).parents("li.separate-icon").eq(0).attr("id"))
                        }
                        isPaste = false;
                    } catch (error) {
                        holder.remove();
                        mouse.clone = false;
                        mouse.placeholder = false;
                        mouse.target = false;
                        update_position(daddy);
                        console.warn(error);
                        layer.close(layerIndex);
                        isPaste = false;
                    }
                }
                $("html,body").removeClass('dad-noSelect');

                // $(".temp-add-li").remove();
            };
            function setCopyInfo(data, nowDate) {
                console.log(data);
                let tempMateArray = ctx.get(daddy.attr("id"));
                let tempMainArray = ctx.get("detailPretreatmentList");
                data.nodeInfo.id = nowDate;
                ctx.set(nowDate, data.nodeInfo);
                data.parameterInfo.forEach((item, index) => {
                    item.fromId = nowDate;
                    tempMateArray.push(item);
                });
                data.globalInfo.forEach((item, index) => {
                    item.fromIndex = nowDate;
                    tempMainArray.push(item)
                });
                ctx.set(daddy.attr("id"), tempMateArray);
                ctx.set("detailPretreatmentList", tempMainArray)
            }

            function dad_update(obj, flag, e) {
                // console.log("update", isPaste);
                if (flag) {
                    let parentScrollTop = $(".current-show-list").eq(0).scrollTop();
                    if (mouse.target != false && mouse.clone != false) {
                        // console.log(mouse.target, mouse.clone);
                        var newplace, origin;
                        origin = $('<span style="display:none"></span>');
                        newplace = $('<span style="display:none"></span>');
                        if (obj.prevAll().hasClass('active') || obj.prevAll().hasClass('readyCopy')) {
                            obj.after(newplace);
                            if (!isPaste) {
                                mouse.target.prev("li.segmentation-li").remove();
                            } else {
                                mouse.paste.prev("li.segmentation-li").remove();
                            }
                        } else {
                            obj.before(newplace);
                            if (!isPaste) {
                                mouse.target.next("li.segmentation-li").remove();
                            } else {
                                mouse.paste.next("li.segmentation-li").remove();
                            }
                        }
                        if (isPaste) {
                            newplace.before(mouse.paste);
                        } else {
                            mouse.target.before(origin);
                            newplace.before(mouse.target);
                        }
                        // mouse.placeholder.css({ top: mouse.target.offset().top - daddy.offset().top, left: mouse.target.offset().left - daddy.offset().left, width: mouse.target.outerWidth() - 10, height: mouse.target.outerHeight() - 10 });
                        origin.remove();
                        newplace.remove();
                        //在移动过程中给target元素添加分割元素
                        if (isPaste) {
                            addSegment(mouse.paste);
                            mouse.pastePlaceholder.css({ top: mouse.paste.offset().top - daddy.offset().top + parentScrollTop, left: mouse.paste.offset().left - daddy.offset().left + daddy.scrollLeft(), width: mouse.paste.outerWidth() - 10, height: mouse.paste.outerHeight() - 10 });
                            mouse.placeholder.css({ top: mouse.target.offset().top - daddy.offset().top + parentScrollTop, left: mouse.target.offset().left - daddy.offset().left + daddy.scrollLeft(), width: mouse.target.outerWidth() - 10, height: mouse.target.outerHeight() - 10 });
                        } else {
                            addSegment(mouse.target);
                            mouse.placeholder.css({ top: mouse.target.offset().top - daddy.offset().top + parentScrollTop, left: mouse.target.offset().left - daddy.offset().left + daddy.scrollLeft(), width: mouse.target.outerWidth() - 10, height: mouse.target.outerHeight() - 10 });
                        }
                        function addSegment(dom) {
                            if (!dom.prev().hasClass("segmentation-li")) {
                                dom.before("<li class='segmentation-li'></li>");
                            }
                            if (!dom.next().hasClass("segmentation-li")) {
                                dom.after("<li class='segmentation-li'></li>");
                            }
                        }
                    }
                }
            }
            function addDrapDad(el) {
                el.addClass(dragClass);
                el.off('mousedown touchstart');
                el.on('mousedown touchstart', doDrap)
                $(jQclass).off('mouseenter', mouseenterfnc);
                $(jQclass).on('mouseenter', mouseenterfnc);
            }
            me.addDrapDad = function (el) {
                el.addClass(dragClass);
                el.off('mousedown touchstart');
                el.on('mousedown touchstart', doDrap)
                $(jQclass).off('mouseenter', mouseenterfnc);
                $(jQclass).on('mouseenter', mouseenterfnc);
            }
            var jq = (options.draggable != false) ? options.draggable : jQclass;
            daddy.find(jq).addClass(dragClass);
            daddy.find(jq).off('mousedown touchstart');
            // daddy.on('mousedown touchstart',jq,function (e) {
            function doDrap(e) {
                e.stopPropagation();
                myEmitter.emit("domDragStart");
                if (e.altKey) {
                    isPaste = true;
                    placeholder = "从此处复制";
                } else {
                    isPaste = false;
                }
                // console.log(isPaste);
                let parentScrollTop = $(".current-show-list").eq(0).scrollTop();
                if (mouse.target == false && e.which == 1 && active == true) {
                    
                    if (options.draggable != false) {
                        if ($(this).parents(".for-menu-box").length > 0 || $(this).parents(".if-else-menu-box").length > 0) {
                            mouse.target = $(this).parents("li").eq(0);
                        } else {
                            mouse.target = daddy.find(jQclass).has(this)
                        }
                    } else {
                        mouse.target = $(this)
                    }
                    mouse.clone = mouse.target.clone();
                    if (isPaste) {
                        // nowDate = new Date().getTime();
                        mouse.paste = mouse.target.clone();
                        mouse.target.addClass('readyCopy');
                        // mouse.paste.attr("id", nowDate)
                    } else {
                        mouse.target.css({ visibility: 'hidden' }).addClass('active');
                    }
                    mouse.clone.addClass(cloneClass);
                    if(typeof daddy == 'undefined'){
                        console.warn('daddy is undefined');
                        daddy = $(mouse.target).parents('ul.liucheng-list').eq(0);
                    }else if(daddy.length < 1){
                        console.warn('daddy.length < 1');
                        daddy = $(mouse.target).parents('ul.liucheng-list').eq(0);
                    }else if(daddy.attr('id') != $(mouse.target).parents('ul.liucheng-list').eq(0).attr('id')){
                        console.warn('daddy id is not match targetList id')
                        daddy = $(mouse.target).parents('ul.liucheng-list').eq(0);
                    }
                    // daddy = $('.detail-liucheng-box .current-show-list').eq(0);
                    // return;
                    daddy.append(mouse.clone);
                    mouse.placeholder = $('<div></div>');
                    mouse.placeholder.addClass('dads-children-placeholder');
                    mouse.placeholder.css({ top: mouse.target.offset().top - daddy.offset().top + parentScrollTop, left: mouse.target.offset().left - daddy.offset().left + daddy.scrollLeft(), width: mouse.target.outerWidth() - 10, height: mouse.target.outerHeight() - 10, lineHeight: mouse.target.height() - 18 + 'px', textAlign: 'center', zIndex: 999 }).text(placeholder);
                    if (isPaste) {
                        mouse.pastePlaceholder = $('<div></div>');
                        mouse.pastePlaceholder.addClass('dads-children-pastePlaceholder');
                        mouse.pastePlaceholder.css({ top: mouse.target.offset().top - daddy.offset().top + parentScrollTop, left: mouse.target.offset().left - daddy.offset().left + daddy.scrollLeft(), width: mouse.target.outerWidth() - 10, height: mouse.target.outerHeight() - 10, lineHeight: mouse.target.height() - 18 + 'px', textAlign: 'center', zIndex: 999 }).text(copyPlaceholder);
                        daddy.append(mouse.pastePlaceholder);
                    }
                    daddy.append(mouse.placeholder);
                    var difx, dify;
                    var bLeft = Math.floor(parseFloat(daddy.css('border-left-width')));
                    var bTop = Math.floor(parseFloat(daddy.css('border-top-width')));
                    difx = mouse.x - mouse.target.offset().left + daddy.offset().left + bLeft;
                    dify = mouse.y - mouse.target.offset().top + daddy.offset().top + bTop;
                    mouse.cloneoffset.x = difx;
                    mouse.cloneoffset.y = dify;
                    mouse.clone.removeClass(childrenClass).css({ position: 'absolute', top: mouse.y - mouse.cloneoffset.y + parentScrollTop, left: mouse.x - mouse.cloneoffset.x + daddy.scrollLeft() });
                    $("html,body").addClass('dad-noSelect')
                    // console.log("mousedown", isPaste);
                }
            }
            daddy.find(jq).on('mousedown touchstart', doDrap);
            $(jQclass).off('mouseenter', mouseenterfnc);
            $(jQclass).on('mouseenter', mouseenterfnc);
            function mouseenterfnc(e) {
                if (e.buttons != 1) {
                    return;
                }
                if ($(this).find(".for-menu-box").length > 0 || $(this).find(".if-else-menu-box").length > 0) {
                    if ($(e.target).hasClass("title") || $(e.target).hasClass("liucheng-item-tips") || $(e.target).parents(".title").length > 0 || $(e.target).parents(".liucheng-item-tips").length > 0) {
                        dad_update($(this), true, e)
                    }
                } else {
                    dad_update($(this), true, e)
                }
            }
            function mouseleavefnc(e) {
                if (e.buttons != 1) {
                    return;
                }
                if ($(this).find(".for-menu-box").length > 0 || $(this).find(".if-else-menu-box").length > 0) {
                    dad_update($(this), true, e)
                }
            }
        });
        return me
    }
}(jQuery));